version: '3.7'

services:
    zookeeper:
        image: quay.io/strimzi/kafka:0.41.0-kafka-3.7.0
        command: [
            "sh", "-c",
            "bin/zookeeper-server-start.sh config/zookeeper.properties"
        ]
        ports:
        - "2181:2181"
        environment:
            LOG_DIR: /tmp/logs
        networks:
            - activesec-network

    kafka:
        image: quay.io/strimzi/kafka:0.41.0-kafka-3.7.0
        command: [
            "sh", "-c",
            "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
        ]
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            LOG_DIR: "/tmp/logs"
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        networks:
            - activesec-network

    postgresql:
        image: postgres:13.3
        environment:
            POSTGRES_USER: "activesec"
            POSTGRES_PASSWORD: "activesec123"
            POSTGRES_DB: "activesec"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U activesec" ]
            interval: 5s
            timeout: 5s
            retries: 6
        ports:
            - "5432:5432"
        networks:
            - activesec-network

    # Jaeger
    jaeger-all-in-one:
        image: jaegertracing/all-in-one:latest
        ports:
            - "16686:16686"
            - "14268"
            - "14250"
        networks:
            - activesec-network
    # Collector
    otel-collector:
        #image: otel/opentelemetry-collector:latest
        image: otel/opentelemetry-collector-contrib:latest
        #image: appdynamics/appdynamics-cloud-otel-collector:latest
        command: [ "--config=/etc/otel-collector-config.yaml" ]
        privileged: true
        volumes:
            - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
            - //var/run/docker.sock:/var/run/docker.sock
        ports:
            - "13133:13133" # Health_check extension
            - "4317:4317"   # OTLP gRPC receiver
            - "55680:55680" # OTLP gRPC receiver alternative port
            - 9091:9091
        depends_on:
            - jaeger-all-in-one
        networks:
            - activesec-network
#    otel-collector-contrib:
#        image: otel/opentelemetry-collector-contrib:latest
#        #image: appdynamics/appdynamics-cloud-otel-collector:latest
#        command: [ "--config=/etc/otel-collector-config.yaml" ]
#        privileged: true
#        ports:
#            - 9091:9091
#        volumes:
#            - ./otel-collector-contrib-config.yaml:/etc/otel-collector-config.yaml
#            - //var/run/docker.sock:/var/run/docker.sock
#        depends_on:
#            - jaeger-all-in-one
#        networks:
#            - activesec-network
    prometheus:
        image: prom/prometheus
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        ports:
            - 9090:9090
        networks:
            - activesec-network

networks:
    activesec-network:
        name: activesec-network